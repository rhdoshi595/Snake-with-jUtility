{"version":3,"sources":["webpack:///webpack/bootstrap 1bc1416b7f04a0aaa846","webpack:///./js/main.js","webpack:///./js/snake-view.js","webpack:///./js/board.js","webpack:///./js/snake.js","webpack:///./js/coordinate.js","webpack:///./jUtility/lib/main.js","webpack:///./jUtility/lib/dom_node_collection.js","webpack:///./js/apple.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACPD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,mBAAkB,QAAQ;AAC1B;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB,QAAQ;AAC1B;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACpBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH,0DAAyD;AACzD;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY;AACZ,sBAAqB;AACrB,oBAAmB;AACnB,qDAAoD;AACpD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACnFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAmC,MAAM;AACzC;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,oCAAmC,MAAM;AACzC;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC5HA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1bc1416b7f04a0aaa846","const View = require('./snake-view.js');\nconst Game = require('./snake.js');\nconst $l = require('./../jUtility/lib/main.js');\n\n$l(() => {\n  const rootEl = $l('.snake');\n  new View(rootEl);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/main.js\n// module id = 0\n// module chunks = 0","const Board = require('./board.js');\nconst $l = require('./../jUtility/lib/main.js');\n\nclass View {\n  constructor($el){\n    this.$el = $el;\n    this.board = new Board();\n    this.drawBoard();\n    this.intervalId = window.setInterval((\n      this.step.bind(this)\n    ), 100);\n    $l(window).on(\"keydown\", this.handleKeyEvent.bind(this));\n  }\n\n  handleKeyEvent(){\n    if(View.MOVES[event.keyCode]){\n      this.board.snake.turn(View.MOVES[event.keyCode]);\n    }\n  }\n\n  render(){\n    this.updateClasses(this.board.snake.segments, \"snake\");\n    this.updateClasses([this.board.apple.position], \"apple\");\n  }\n\n  updateClasses(coordinates, className){\n    $l(`.${className}`).removeClass(className);\n    coordinates.forEach((coordinate) => {\n      const flatCoordinate = ((coordinate.x * 20) + coordinate.y);\n      if(this.$li){\n        this.$li.eq(flatCoordinate).addClass(className);\n      }\n    });\n  }\n\n  drawBoard(){\n    let html = \"\";\n    for(let i = 0; i < 20; i += 1){\n      html += \"<ul>\";\n      for(let j = 0; j < 20; j += 1){\n        html += \"<li></li>\";\n      }\n      html += \"</ul>\";\n    }\n    this.$el.html(html);\n    this.$li = $l(\"li\");\n  }\n\n  step(){\n    const rootEl = $l('.snake');\n    if(this.board.snake.segments.length > 0){\n      this.board.snake.move();\n      this.render();\n    } else {\n      window.clearInterval(this.intervalId);\n      new View(rootEl);\n    }\n  }\n}\n\nView.MOVES = {\n  38: \"N\",\n  39: \"E\",\n  40: \"S\",\n  37: \"W\"\n};\n\nmodule.exports = View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/snake-view.js\n// module id = 1\n// module chunks = 0","const Snake = require('./snake.js');\nconst Apple = require('./apple.js');\n\nclass Board {\n  constructor(){\n    this.snake = new Snake(this);\n    this.apple = new Apple(this);\n    this.grid = Board.createGrid();\n  }\n\n  static createGrid(){\n    const grid = [];\n    for(let i = 0; i < 20; i += 1){\n      grid.push([]);\n      for(let j = 0; j < 20; j += 1){\n        grid[i].push(\"E\");\n      }\n    }\n    return grid;\n  }\n\n  render(){\n    const grid = Board.createGrid();\n\n    this.snake.segments.forEach((coordinate) => {\n      grid[coordinate.x][coordinate.y] = \"S\";\n    });\n\n    grid[this.apple.position.x][this.apple.position.y] = \"A\";\n    grid.map(row => row.join(\"\")).join(\"\\n\");\n  }\n\n  validPosition(coordinate){\n    return (\n      (coordinate.x >= 0) &&\n      (coordinate.x < 20) &&\n      (coordinate.y >= 0) &&\n      (coordinate.y < 20)\n    );\n  }\n}\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/board.js\n// module id = 2\n// module chunks = 0","const Coordinate = require('./coordinate.js');\n\nclass Snake {\n  constructor(board){\n    this.direction = \"N\";\n    this.board = board;\n    this.segments = [new Coordinate(10, 10)];\n    this.turning = false;\n    this.grow = 0;\n  }\n\n  head(){\n    return this.segments[0];\n  }\n\n  validMove(){\n    const head = this.head();\n    if(!this.board.validPosition(this.head())){\n      return false;\n    }\n    for(let i = 1; i < this.segments.length; i += 1){\n      if(this.segments[i].equals(head)){\n        return false;\n      }\n    }\n    return true;\n  }\n\n  eatApple(){\n    if(this.head().equals(this.board.apple.position)){\n      this.grow += 3;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  move(){\n    this.segments.unshift(this.head().plus(Snake.CARDINALS[this.direction]));\n    this.turning = false;\n    if(this.eatApple()){\n      this.board.apple.addApple();\n    }\n    if(this.grow > 0){\n      this.grow -= 1;\n    } else {\n      this.segments.pop();\n    }\n    if(!this.validMove()){\n      this.segments = [];\n    }\n  }\n\n  turn(dir){\n    if((Snake.CARDINALS[this.direction].isOpposite(Snake.CARDINALS[dir])) || this.turning){\n      return;\n    } else {\n      this.turning = true;\n      this.direction = dir;\n    }\n  }\n\n  hasCoordinate([x, y]){\n    this.segments.forEach((coordinate) => {\n      if ((coordinate[0] === x) && (coordinate[1] === y)){\n        return true;\n      }\n    });\n\n    return false;\n  }\n}\n\nSnake.CARDINALS = {\n  \"N\": new Coordinate(-1, 0),\n  \"S\": new Coordinate(1, 0),\n  \"E\": new Coordinate(0, 1),\n  \"W\": new Coordinate(0, -1)\n};\n\nmodule.exports = Snake;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/snake.js\n// module id = 3\n// module chunks = 0","class Coordinate{\n  constructor(x, y){\n    this.x = x;\n    this.y = y;\n  }\n\n  equals(coord){\n    return ((this.x === coord.x) && (this.y === coord.y));\n  }\n\n  isOpposite(coord){\n    return ((this.x === (-1 * coord.x)) && (this.y === (-1 * coord.y)));\n  }\n\n  plus(cardinal){\n    \n    return new Coordinate(this.x + cardinal.x, this.y + cardinal.y);\n  }\n}\n\nmodule.exports = Coordinate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/coordinate.js\n// module id = 4\n// module chunks = 0","const DomNodeCollection = require(\"./dom_node_collection.js\");\n\nconst functionQueue = [];\nlet ready = false;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  ready = true;\n  functionQueue.forEach((func) => {\n    func();\n  });\n});\n\nconst $l = (selector) => {\n  if(typeof selector === \"function\"){\n    if(ready){\n      selector();\n    } else {\n      functionQueue.push(selector);\n    }\n  } else if (selector === window){\n    return new DomNodeCollection([window]);\n  } else if(selector instanceof HTMLElement){\n    return new DomNodeCollection([selector]);\n  } else if(typeof selector === \"string\"){\n    const nodeList = document.querySelectorAll(selector); //nodes is a node list\n    const nodes_array = Array.from(nodeList);\n    return new DomNodeCollection(nodes_array);\n  }\n};\n\n\n\nwindow.$l = $l;\n\n$l.extend = (...otherObjs) => {\n  let result = {};\n  otherObjs.forEach(argObj => {\n    for(var key in argObj){\n      if(result[key] === undefined){\n        result[key] = argObj[key];\n      } else {\n        result[key] = argObj[key];\n      }\n    }\n  });\n  return result;\n};\n\nconst queryString = (object) => {\n  let result = \"\";\n  for(var key in object){\n    if(object.hasOwnProperty(key)){\n      result += key + \"=\" + object[key] + \"&\";\n    }\n  }\n  return result.substring(0, result.length - 1);\n};\n\n$l.ajax = (optionsObj) => {\n  const apple = {\n    method: \"GET\",\n    url: \"\",\n    data: {},\n    success: () => {},\n    error: () => {},\n    contentType: 'application/x-www-form-urlencoded; charset=UTF-8'\n  };\n\n  optionsObj = $l.extend(apple, optionsObj);\n  const xhr = new XMLHttpRequest();\n\n  xhr.open(optionsObj.method, optionsObj.url, true);\n\n  xhr.onload = (e) => {\n    if(xhr.status === 200){\n      optionsObj.success(xhr.response);\n    } else {\n      optionsObj.error(xhr.response);\n    }\n  };\n\n  xhr.send(JSON.stringify(optionsObj.data));\n};\n\nmodule.exports = $l;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jUtility/lib/main.js\n// module id = 5\n// module chunks = 0","class DomNodeCollection {\n  constructor (nodes_array){\n    this.nodes_array = nodes_array;\n  }\n\n  html(argument) {\n    if(typeof argument === \"string\"){\n      this.nodes_array.forEach(\n        (node) => node.innerHTML = argument\n      );\n    } else {\n      if(this.nodes_array.length > 0){\n        return this.nodes_array[0].innerHTML;\n      }\n    }\n  }\n\n  empty(){\n    this.html = (\"\");\n  }\n\n  append(content){\n    if(this.nodes_array.length === 0){\n      return;\n    }\n    if(typeof content === \"string\" && !(content instanceof DomNodeCollection)){\n      content = $l(content);\n    }\n    if(typeof content === \"string\"){\n      this.nodes_array.forEach(\n        (node) => node.innerHTML += content\n      );\n    } else if (content instanceof DomNodeCollection) {\n      this.nodes_array.forEach(\n        (node) => {\n          content.nodes_array.forEach(\n            child => {\n              node.appendChild(child.cloneNode(true));\n            }\n          );\n        }\n      );\n    }\n  }\n\n  attr(name, value){\n    if(typeof value === \"string\"){\n      this.nodes_array.forEach(node => node.setAttribute(name, value));\n    } else {\n      return this.nodes_array[0].getAttribute(name);\n    }\n  }\n\n  addClass(name){\n    this.nodes_array.forEach((node) => node.classList.add(name));\n  }\n\n  removeClass(name){\n    this.nodes_array.forEach((node) => node.classList.remove(name));\n  }\n\n  children(){\n    let childrenNodes = [];\n    this.nodes_array.forEach((node) => {\n      const singleNodeChildren = node.children;\n      childrenNodes = childrenNodes.concat(Array.from(singleNodeChildren));\n    });\n    return new DomNodeCollection(childrenNodes);\n  }\n\n  parent() {\n    let parentNodes = [];\n    this.nodes_array.forEach((node) => parentNodes.push(node.parentNode));\n    return new DomNodeCollection(parentNodes);\n  }\n\n  find(picker){\n    let found = [];\n    this.nodes_array.forEach((node) => {\n      const list = node.querySelectorAll(picker);\n      found = found.concat(Array.from(list));\n    });\n    return new DomNodeCollection(found);\n  }\n\n  remove(picker){\n    this.nodes_array.forEach((node) => node.parentNode.removeChild(node));\n  }\n\n  on(event, cb){\n    this.nodes_array.forEach((node) => {\n      node.addEventListener(event, cb);\n      const eventKey = `jutility-${event}`;\n      if (typeof node[eventKey] === \"undefined\"){\n        node[eventKey] = [];\n      }\n      node[eventKey].push(cb);\n    });\n  }\n\n  off(event){\n    this.nodes_array.forEach((node) => {\n      const eventKey = `jutility-${event}`;\n      if(node[eventKey]){\n        node[eventKey].forEach((cb) => {\n          node.removeEventListener(event, cb);\n        });\n      }\n      node[eventKey] = [];\n    });\n  }\n\n  text(string){\n    this.nodes_array.forEach((node) => {\n      node.textContent = string;\n    });\n    return;\n  }\n\n  eq(index){\n    return new DomNodeCollection([this.nodes_array[index]]);\n  }\n}\n\nmodule.exports = DomNodeCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jUtility/lib/dom_node_collection.js\n// module id = 6\n// module chunks = 0","const Coordinate = require('./coordinate.js');\n\nclass Apple{\n  constructor(board){\n    this.board = board;\n    this.addApple();\n  }\n\n  addApple(){\n    let x = Math.floor(Math.random() * 20);\n    let y = Math.floor(Math.random() * 20);\n\n    while (this.board.snake.hasCoordinate([x,y])){\n      x = Math.floor(Math.random() * 20);\n      y = Math.floor(Math.random() * 20);\n    }\n\n    this.position = new Coordinate(x, y);\n  }\n}\n\nmodule.exports = Apple;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/apple.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}